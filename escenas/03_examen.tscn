[gd_scene load_steps=12 format=2]

[ext_resource path="res://assets/images/hoja_blanca.png" type="Texture" id=1]
[ext_resource path="res://assets/images/redondelete.png" type="Texture" id=2]
[ext_resource path="res://PuertaCerrada.png" type="Texture" id=3]
[ext_resource path="res://FondoAula.png" type="Texture" id=4]
[ext_resource path="res://assets/Sonido/Musica/Examen.mp3" type="AudioStream" id=5]

[sub_resource type="GDScript" id=1]
script/source = "extends Escena

var color_resaltado: Color = Color(\"#271796\")
var color_normal: Color = Color(\"#000000\")
var punto_actual: String = 'A'
var opciones_elegidas = []
var bloqueado = true

func _ready() -> void:
	$animacion.connect(\"animation_finished\", self, \"_cuando_una_animacion_termina\")
	for label in get_tree().get_nodes_in_group(\"opciones_examen\"):
		label.mouse_default_cursor_shape = Control.CURSOR_ARROW

	agregar_opcion('A1', $contenido/examen/filas/punto_A/margen/opciones/opcion_1)
	agregar_opcion('A2', $contenido/examen/filas/punto_A/margen/opciones/opcion_2)
	agregar_opcion('A3', $contenido/examen/filas/punto_A/margen/opciones/opcion_3)
	
	agregar_opcion('B1', $contenido/examen/filas/punto_B/margen/opciones/opcion_1)
	agregar_opcion('B2', $contenido/examen/filas/punto_B/margen/opciones/opcion_2)
	agregar_opcion('B3', $contenido/examen/filas/punto_B/margen/opciones/opcion_3)
	
	agregar_opcion('C1', $contenido/examen/filas/punto_C/margen/opciones/opcion_1)
	agregar_opcion('C2', $contenido/examen/filas/punto_C/margen/opciones/opcion_2)
	agregar_opcion('C3', $contenido/examen/filas/punto_C/margen/opciones/opcion_3)

func agregar_opcion(id: String, label: Label):
	label.connect(\"mouse_entered\", self, \"mouse_se_posa_suavemente_sobre_una_opcion\", [id, label])
	label.connect(\"mouse_exited\", self, \"mouse_se_aleja_fugazmente_de_una_opcion\", [id, label])
	label.connect(\"gui_input\", self, \"interaccion_con_una_opcion\", [id, label])

func _cuando_una_animacion_termina(nombre_animacion: String):
	bloqueado = false
	for label in get_tree().get_nodes_in_group(\"opciones_examen\"):
		label.mouse_default_cursor_shape = Control.CURSOR_POINTING_HAND
		
	

func mouse_se_posa_suavemente_sobre_una_opcion(id: String, label: Label):
	if id.begins_with(punto_actual) and not bloqueado:
		label.modulate = color_resaltado

func mouse_se_aleja_fugazmente_de_una_opcion(id: String, label: Label):
	if id.begins_with(punto_actual):
		label.modulate = color_normal

func interaccion_con_una_opcion(event, id: String, label: Label):
	if bloqueado:
		return
	if not event is InputEventMouseButton or not event.is_pressed():
		return
	if not id.begins_with(punto_actual):
		return
	opciones_elegidas.append(id)
	$contenido/examen/redondeletes.get_node(id).visible = true
	bloqueado = true
	for label in get_tree().get_nodes_in_group(\"opciones_examen\"):
		label.mouse_default_cursor_shape = Control.CURSOR_ARROW
	match punto_actual:
		'A':
			punto_actual = 'B'
			$animacion.play(\"enfocar_B\")
		'B':
			punto_actual = 'C'
			$animacion.play(\"enfocar_C\")
		'C':
			punto_actual = 'DDD'
			$animacion.play(\"finalizo_examen\")
			terminar_examen()
			
func terminar_examen():
	dice(\"Jade\", \"Terminé\")
	dice(\"Jade\", \"Espero que todo esté bien\")
	corregir_examen()
	
	cambiar_escena_a('04_pasillo_escuela2')
	# $animacion.connect(\"animation_finished\", self, 'cambiar_escena_a', ['00_diario'])

func corregir_examen():
	if opciones_elegidas.has(\"A1\") and opciones_elegidas.has(\"B2\") and opciones_elegidas.has(\"C3\"):
		guardar_resultado_examen(\"excelente\")
		anota_en_el_diario(\"Creo que me fue excelente en el examen! En tu cara robotito\")
	elif opciones_elegidas.has(\"A3\") and opciones_elegidas.has(\"B1\") and opciones_elegidas.has(\"C2\"):
		guardar_resultado_examen(\"nota_buena\")
		anota_en_el_diario(\"Creo que me fue bastante bien. Y eso que me dieron ganas de quemar el examen en la pregunta dos\")
	elif opciones_elegidas.has(\"A2\") and opciones_elegidas.has(\"B3\") and opciones_elegidas.has(\"C1\"):
		guardar_resultado_examen(\"nota_minima\")
		anota_en_el_diario(\"Aprender es lo que importa, no con qué nota. Espero haberme sacado el mínimo, aunque ese examen es realmente un chiste\")
	else:
		guardar_resultado_examen(\"reprobado\")
		anota_en_el_diario(\"Siempre es lo mismo con este estúpido examen. No debo haber acertado nada, porque siempre hay que poner exactamente lo que dicen los libros\")
"

[sub_resource type="Theme" id=2]
MarginContainer/constants/margin_left = 15
VBoxContainer/constants/separation = 9

[sub_resource type="Animation" id=3]
length = 2.0
tracks/0/type = "value"
tracks/0/path = NodePath("contenido/examen:position")
tracks/0/interp = 2
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 2 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector2( 215.722, 643.943 ), Vector2( 181.781, 95.2278 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("contenido/examen/filas/punto_A:modulate")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 2 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0.243137 ), Color( 1, 1, 1, 1 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("contenido/examen/filas/punto_B:modulate")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 2 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0.258824 ), Color( 1, 1, 1, 0.258824 ) ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("contenido/examen:scale")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ Vector2( 1, 1 ) ]
}

[sub_resource type="Animation" id=4]
length = 2.0
tracks/0/type = "value"
tracks/0/path = NodePath("contenido/examen:position")
tracks/0/interp = 2
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 1.2 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector2( 181.781, 95.2278 ), Vector2( 204.408, -232.87 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("contenido/examen/filas/punto_A:modulate")
tracks/1/interp = 2
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 1.2 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 0.243137 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("contenido/examen/filas/punto_B:modulate")
tracks/2/interp = 2
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 1.2 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0.258824 ), Color( 1, 1, 1, 1 ) ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("contenido/examen/filas/punto_C:modulate")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 1.2 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 0.239216 ) ]
}

[sub_resource type="Animation" id=5]
length = 2.0
tracks/0/type = "value"
tracks/0/path = NodePath("contenido/examen:position")
tracks/0/interp = 2
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 1.2 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector2( 204.408, -232.87 ), Vector2( 166.653, -504.706 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("contenido/examen/filas/punto_B:modulate")
tracks/1/interp = 2
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 1.2 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 0.223529 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("contenido/examen/filas/punto_C:modulate")
tracks/2/interp = 2
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 1.2 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0.223529 ), Color( 1, 1, 1, 1 ) ]
}

[sub_resource type="Animation" id=6]
length = 3.0
tracks/0/type = "value"
tracks/0/path = NodePath("contenido/examen/filas/punto_C:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 1 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("contenido/examen/filas/punto_B:modulate")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0.223529 ), Color( 1, 1, 1, 1 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("contenido/examen/filas/punto_A:modulate")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0.243137 ), Color( 1, 1, 1, 1 ) ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("contenido/examen:position")
tracks/3/interp = 2
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 0.9, 1.8, 2.9 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ Vector2( 166.653, -504.706 ), Vector2( 319.916, 4.38727 ), Vector2( 319.916, 4.38727 ), Vector2( 219.222, -757.417 ) ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("contenido/examen:scale")
tracks/4/interp = 2
tracks/4/loop_wrap = true
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/keys = {
"times": PoolRealArray( 0, 1.3, 2.9 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ Vector2( 1, 1 ), Vector2( 0.529921, 0.529921 ), Vector2( 0.599661, 0.599661 ) ]
}

[node name="examen" type="Node2D"]
script = SubResource( 1 )
puede_abrir_el_diario = false
puede_tomar_fotos = false

[node name="contenido" type="Node2D" parent="."]
scale = Vector2( 1.8529, 1.8529 )

[node name="fondo" type="Node2D" parent="contenido"]
scale = Vector2( 0.930364, 0.930364 )

[node name="fondo" type="Sprite" parent="contenido/fondo"]
position = Vector2( 927.122, 350.294 )
rotation = -0.000509253
scale = Vector2( 0.881113, 0.881113 )
texture = ExtResource( 4 )

[node name="Sprite" type="Sprite" parent="contenido/fondo"]
position = Vector2( -28.2528, 368.892 )
rotation = -0.000509253
scale = Vector2( 0.881, 0.881 )
texture = ExtResource( 3 )

[node name="examen" type="Node2D" parent="contenido"]
position = Vector2( 166.653, -504.706 )

[node name="hoja" type="Sprite" parent="contenido/examen"]
position = Vector2( 332.182, 585.472 )
rotation = 1.52853
scale = Vector2( 2.59966, 2.59966 )
texture = ExtResource( 1 )
__meta__ = {
"_edit_lock_": true
}

[node name="filas" type="VBoxContainer" parent="contenido/examen"]
margin_left = 18.0
margin_top = 12.0
margin_right = 574.0
margin_bottom = 951.0
rect_rotation = -2.31805
rect_scale = Vector2( 1.2, 1.2 )
theme = SubResource( 2 )
__meta__ = {
"_edit_lock_": true,
"_edit_use_anchors_": false
}

[node name="titulo" type="Label" parent="contenido/examen/filas"]
modulate = Color( 0, 0, 0, 1 )
margin_right = 556.0
margin_bottom = 48.0
text = "
history_exam
"
align = 1
autowrap = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="enunciado" type="Label" parent="contenido/examen/filas"]
modulate = Color( 0, 0, 0, 1 )
margin_top = 57.0
margin_right = 556.0
margin_bottom = 88.0
text = "according_to_the_classes
"
autowrap = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="punto_A" type="VBoxContainer" parent="contenido/examen/filas"]
modulate = Color( 1, 1, 1, 0.243137 )
margin_top = 97.0
margin_right = 556.0
margin_bottom = 265.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="enunciado" type="Label" parent="contenido/examen/filas/punto_A"]
modulate = Color( 0, 0, 0, 1 )
margin_right = 556.0
margin_bottom = 48.0
text = "
answer_exam_a
"
autowrap = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="margen" type="MarginContainer" parent="contenido/examen/filas/punto_A"]
margin_top = 57.0
margin_right = 556.0
margin_bottom = 168.0

[node name="opciones" type="VBoxContainer" parent="contenido/examen/filas/punto_A/margen"]
margin_left = 15.0
margin_right = 556.0
margin_bottom = 111.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="opcion_1" type="Label" parent="contenido/examen/filas/punto_A/margen/opciones" groups=["opciones_examen"]]
modulate = Color( 0, 0, 0, 1 )
margin_right = 541.0
margin_bottom = 31.0
mouse_filter = 0
mouse_default_cursor_shape = 2
text = "question_a_option_1
"
autowrap = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="opcion_2" type="Label" parent="contenido/examen/filas/punto_A/margen/opciones" groups=["opciones_examen"]]
modulate = Color( 0, 0, 0, 1 )
margin_top = 40.0
margin_right = 541.0
margin_bottom = 71.0
mouse_filter = 0
mouse_default_cursor_shape = 2
text = "question_a_option_2
"
autowrap = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="opcion_3" type="Label" parent="contenido/examen/filas/punto_A/margen/opciones" groups=["opciones_examen"]]
modulate = Color( 0, 0, 0, 1 )
margin_top = 80.0
margin_right = 541.0
margin_bottom = 111.0
mouse_filter = 0
mouse_default_cursor_shape = 2
text = "question_a_option_3
"
autowrap = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="punto_B" type="VBoxContainer" parent="contenido/examen/filas"]
modulate = Color( 1, 1, 1, 0.223529 )
margin_top = 274.0
margin_right = 556.0
margin_bottom = 448.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="enunciado" type="Label" parent="contenido/examen/filas/punto_B"]
modulate = Color( 0, 0, 0, 1 )
margin_right = 556.0
margin_bottom = 48.0
text = "
answer_exam_b
"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="margen" type="MarginContainer" parent="contenido/examen/filas/punto_B"]
margin_top = 57.0
margin_right = 556.0
margin_bottom = 151.0

[node name="opciones" type="VBoxContainer" parent="contenido/examen/filas/punto_B/margen"]
margin_left = 15.0
margin_right = 556.0
margin_bottom = 94.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="opcion_1" type="Label" parent="contenido/examen/filas/punto_B/margen/opciones" groups=["opciones_examen"]]
modulate = Color( 0, 0, 0, 1 )
margin_right = 541.0
margin_bottom = 31.0
mouse_filter = 0
mouse_default_cursor_shape = 2
text = "question_b_option_1
"
autowrap = true

[node name="opcion_2" type="Label" parent="contenido/examen/filas/punto_B/margen/opciones" groups=["opciones_examen"]]
modulate = Color( 0, 0, 0, 1 )
margin_top = 40.0
margin_right = 541.0
margin_bottom = 71.0
mouse_filter = 0
mouse_default_cursor_shape = 2
text = "question_b_option_2
"
autowrap = true

[node name="opcion_3" type="Label" parent="contenido/examen/filas/punto_B/margen/opciones" groups=["opciones_examen"]]
modulate = Color( 0, 0, 0, 1 )
margin_top = 80.0
margin_right = 541.0
margin_bottom = 94.0
mouse_filter = 0
mouse_default_cursor_shape = 2
text = "question_b_option_3"
autowrap = true

[node name="hbox" type="HBoxContainer" parent="contenido/examen/filas/punto_B"]
margin_top = 160.0
margin_right = 556.0
margin_bottom = 174.0

[node name="tab" type="Label" parent="contenido/examen/filas/punto_B/hbox"]
modulate = Color( 1, 1, 1, 0 )
margin_right = 14.0
margin_bottom = 14.0
text = "as"

[node name="opciones" type="VBoxContainer" parent="contenido/examen/filas/punto_B/hbox"]
margin_left = 18.0
margin_right = 18.0
margin_bottom = 14.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="punto_C" type="VBoxContainer" parent="contenido/examen/filas"]
margin_top = 457.0
margin_right = 556.0
margin_bottom = 625.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="enunciado" type="Label" parent="contenido/examen/filas/punto_C"]
modulate = Color( 0, 0, 0, 1 )
margin_right = 556.0
margin_bottom = 48.0
text = "
answer_exam_c
"
autowrap = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="margen" type="MarginContainer" parent="contenido/examen/filas/punto_C"]
margin_top = 57.0
margin_right = 556.0
margin_bottom = 168.0

[node name="opciones" type="VBoxContainer" parent="contenido/examen/filas/punto_C/margen"]
margin_left = 15.0
margin_right = 556.0
margin_bottom = 111.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="opcion_1" type="Label" parent="contenido/examen/filas/punto_C/margen/opciones" groups=["opciones_examen"]]
modulate = Color( 0, 0, 0, 1 )
margin_right = 541.0
margin_bottom = 31.0
mouse_filter = 0
mouse_default_cursor_shape = 2
text = "question_c_option_1
"
autowrap = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="opcion_2" type="Label" parent="contenido/examen/filas/punto_C/margen/opciones" groups=["opciones_examen"]]
modulate = Color( 0, 0, 0, 1 )
margin_top = 40.0
margin_right = 541.0
margin_bottom = 71.0
mouse_filter = 0
mouse_default_cursor_shape = 2
text = "question_c_option_2
"
autowrap = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="opcion_3" type="Label" parent="contenido/examen/filas/punto_C/margen/opciones" groups=["opciones_examen"]]
modulate = Color( 0, 0, 0, 1 )
margin_top = 80.0
margin_right = 541.0
margin_bottom = 111.0
mouse_filter = 0
mouse_default_cursor_shape = 2
text = "question_c_option_3
"
autowrap = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="redondeletes" type="Node2D" parent="contenido/examen"]
__meta__ = {
"_edit_lock_": true
}

[node name="A1" type="Sprite" parent="contenido/examen/redondeletes"]
visible = false
position = Vector2( 49.7266, 202.386 )
scale = Vector2( 0.0242383, 0.034024 )
texture = ExtResource( 2 )

[node name="A2" type="Sprite" parent="contenido/examen/redondeletes"]
visible = false
position = Vector2( 53.0679, 311.075 )
scale = Vector2( 0.0231984, 0.0370069 )
texture = ExtResource( 2 )

[node name="A3" type="Sprite" parent="contenido/examen/redondeletes"]
visible = false
position = Vector2( 54.4028, 359.13 )
scale = Vector2( 0.0231984, 0.0370069 )
texture = ExtResource( 2 )

[node name="B1" type="Sprite" parent="contenido/examen/redondeletes"]
visible = false
position = Vector2( 60.396, 496.226 )
scale = Vector2( 0.0231984, 0.0370069 )
texture = ExtResource( 2 )

[node name="B2" type="Sprite" parent="contenido/examen/redondeletes"]
visible = false
position = Vector2( 64.1416, 542.674 )
scale = Vector2( 0.0231984, 0.0370069 )
texture = ExtResource( 2 )

[node name="B3" type="Sprite" parent="contenido/examen/redondeletes"]
visible = false
position = Vector2( 64.8906, 612.346 )
scale = Vector2( 0.0231984, 0.0370069 )
texture = ExtResource( 2 )

[node name="C1" type="Sprite" parent="contenido/examen/redondeletes"]
visible = false
position = Vector2( 71.6333, 754.686 )
scale = Vector2( 0.0231984, 0.0370069 )
texture = ExtResource( 2 )

[node name="C2" type="Sprite" parent="contenido/examen/redondeletes"]
visible = false
position = Vector2( 73.8784, 824.278 )
scale = Vector2( 0.0231984, 0.0370069 )
texture = ExtResource( 2 )

[node name="C3" type="Sprite" parent="contenido/examen/redondeletes"]
visible = false
position = Vector2( 78.1162, 912.744 )
scale = Vector2( 0.0231984, 0.0370069 )
texture = ExtResource( 2 )

[node name="OSTExamen" type="AudioStreamPlayer" parent="."]
stream = ExtResource( 5 )
volume_db = -5.0
autoplay = true

[node name="animacion" type="AnimationPlayer" parent="."]
autoplay = "enfocar_A"
anims/enfocar_A = SubResource( 3 )
anims/enfocar_B = SubResource( 4 )
anims/enfocar_C = SubResource( 5 )
anims/finalizo_examen = SubResource( 6 )
